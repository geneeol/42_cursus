!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
.DEFAULT_GOAL	get_next_line/gnlTester/Makefile	/^.DEFAULT_GOAL			= a$/;"	m
.DEFAULT_GOAL	get_next_line_upd/gnlTester/Makefile	/^.DEFAULT_GOAL			= a$/;"	m
10MBONUS	get_next_line/gnlTester/Makefile	/^10MBONUS				= $(addprefix 10M, $(BONUS))$/;"	m
10MBONUS	get_next_line_upd/gnlTester/Makefile	/^10MBONUS				= $(addprefix 10M, $(BONUS))$/;"	m
10MMANDATORY	get_next_line/gnlTester/Makefile	/^10MMANDATORY			= $(addprefix 10M, $(MANDATORY))$/;"	m
10MMANDATORY	get_next_line_upd/gnlTester/Makefile	/^10MMANDATORY			= $(addprefix 10M, $(MANDATORY))$/;"	m
10MMBONUS	get_next_line/gnlTester/Makefile	/^10MMBONUS				= $(addprefix m10M, $(BONUS))$/;"	m
10MMBONUS	get_next_line_upd/gnlTester/Makefile	/^10MMBONUS				= $(addprefix m10M, $(BONUS))$/;"	m
1BONUS	get_next_line/gnlTester/Makefile	/^1BONUS					= $(addprefix 1, $(BONUS))$/;"	m
1BONUS	get_next_line_upd/gnlTester/Makefile	/^1BONUS					= $(addprefix 1, $(BONUS))$/;"	m
1MANDATORY	get_next_line/gnlTester/Makefile	/^1MANDATORY				= $(addprefix 1, $(MANDATORY))$/;"	m
1MANDATORY	get_next_line_upd/gnlTester/Makefile	/^1MANDATORY				= $(addprefix 1, $(MANDATORY))$/;"	m
1MBONUS	get_next_line/gnlTester/Makefile	/^1MBONUS					= $(addprefix m1, $(BONUS))$/;"	m
1MBONUS	get_next_line_upd/gnlTester/Makefile	/^1MBONUS					= $(addprefix m1, $(BONUS))$/;"	m
42BONUS	get_next_line/gnlTester/Makefile	/^42BONUS					= $(addprefix 42, $(BONUS))$/;"	m
42BONUS	get_next_line_upd/gnlTester/Makefile	/^42BONUS					= $(addprefix 42, $(BONUS))$/;"	m
42MANDATORY	get_next_line/gnlTester/Makefile	/^42MANDATORY				= $(addprefix 42, $(MANDATORY))$/;"	m
42MANDATORY	get_next_line_upd/gnlTester/Makefile	/^42MANDATORY				= $(addprefix 42, $(MANDATORY))$/;"	m
42MBONUS	get_next_line/gnlTester/Makefile	/^42MBONUS				= $(addprefix m42, $(BONUS))$/;"	m
42MBONUS	get_next_line_upd/gnlTester/Makefile	/^42MBONUS				= $(addprefix m42, $(BONUS))$/;"	m
ALL_OBJS	ft_printf/Libft/Makefile	/^	ALL_OBJS = $(OBJS) $(OBJS_BONUS)$/;"	m
ALL_OBJS	ft_printf/Libft/Makefile	/^	ALL_OBJS = $(OBJS)$/;"	m
ALL_OBJS	libft/Makefile	/^	ALL_OBJS = $(OBJS) $(OBJS_BONUS)$/;"	m
ALL_OBJS	libft/Makefile	/^	ALL_OBJS = $(OBJS)$/;"	m
BG_BLACK	get_next_line/gnlTester/utils/color.hpp	/^	BG_BLACK			= 40,$/;"	e	enum:Color
BG_BLACK	get_next_line_upd/gnlTester/utils/color.hpp	/^	BG_BLACK			= 40,$/;"	e	enum:Color
BG_BLUE	get_next_line/gnlTester/utils/color.hpp	/^	BG_BLUE				= 44,$/;"	e	enum:Color
BG_BLUE	get_next_line_upd/gnlTester/utils/color.hpp	/^	BG_BLUE				= 44,$/;"	e	enum:Color
BG_CYAN	get_next_line/gnlTester/utils/color.hpp	/^	BG_CYAN				= 46,$/;"	e	enum:Color
BG_CYAN	get_next_line_upd/gnlTester/utils/color.hpp	/^	BG_CYAN				= 46,$/;"	e	enum:Color
BG_DEFAULT	get_next_line/gnlTester/utils/color.hpp	/^	BG_DEFAULT			= 49,$/;"	e	enum:Color
BG_DEFAULT	get_next_line_upd/gnlTester/utils/color.hpp	/^	BG_DEFAULT			= 49,$/;"	e	enum:Color
BG_DGRAY	get_next_line/gnlTester/utils/color.hpp	/^	BG_DGRAY			= 100,$/;"	e	enum:Color
BG_DGRAY	get_next_line_upd/gnlTester/utils/color.hpp	/^	BG_DGRAY			= 100,$/;"	e	enum:Color
BG_GREEN	get_next_line/gnlTester/utils/color.hpp	/^	BG_GREEN			= 42,$/;"	e	enum:Color
BG_GREEN	get_next_line_upd/gnlTester/utils/color.hpp	/^	BG_GREEN			= 42,$/;"	e	enum:Color
BG_LBLUE	get_next_line/gnlTester/utils/color.hpp	/^	BG_LBLUE			= 104,$/;"	e	enum:Color
BG_LBLUE	get_next_line_upd/gnlTester/utils/color.hpp	/^	BG_LBLUE			= 104,$/;"	e	enum:Color
BG_LCYAN	get_next_line/gnlTester/utils/color.hpp	/^	BG_LCYAN			= 106,$/;"	e	enum:Color
BG_LCYAN	get_next_line_upd/gnlTester/utils/color.hpp	/^	BG_LCYAN			= 106,$/;"	e	enum:Color
BG_LGRAY	get_next_line/gnlTester/utils/color.hpp	/^	BG_LGRAY			= 47,$/;"	e	enum:Color
BG_LGRAY	get_next_line_upd/gnlTester/utils/color.hpp	/^	BG_LGRAY			= 47,$/;"	e	enum:Color
BG_LGREEN	get_next_line/gnlTester/utils/color.hpp	/^	BG_LGREEN			= 102,$/;"	e	enum:Color
BG_LGREEN	get_next_line_upd/gnlTester/utils/color.hpp	/^	BG_LGREEN			= 102,$/;"	e	enum:Color
BG_LMAGENTA	get_next_line/gnlTester/utils/color.hpp	/^	BG_LMAGENTA			= 105,$/;"	e	enum:Color
BG_LMAGENTA	get_next_line_upd/gnlTester/utils/color.hpp	/^	BG_LMAGENTA			= 105,$/;"	e	enum:Color
BG_LRED	get_next_line/gnlTester/utils/color.hpp	/^	BG_LRED				= 101,$/;"	e	enum:Color
BG_LRED	get_next_line_upd/gnlTester/utils/color.hpp	/^	BG_LRED				= 101,$/;"	e	enum:Color
BG_LYELLOW	get_next_line/gnlTester/utils/color.hpp	/^	BG_LYELLOW			= 103,$/;"	e	enum:Color
BG_LYELLOW	get_next_line_upd/gnlTester/utils/color.hpp	/^	BG_LYELLOW			= 103,$/;"	e	enum:Color
BG_MAGENTA	get_next_line/gnlTester/utils/color.hpp	/^	BG_MAGENTA			= 45,$/;"	e	enum:Color
BG_MAGENTA	get_next_line_upd/gnlTester/utils/color.hpp	/^	BG_MAGENTA			= 45,$/;"	e	enum:Color
BG_RED	get_next_line/gnlTester/utils/color.hpp	/^	BG_RED				= 41,$/;"	e	enum:Color
BG_RED	get_next_line_upd/gnlTester/utils/color.hpp	/^	BG_RED				= 41,$/;"	e	enum:Color
BG_WHITE	get_next_line/gnlTester/utils/color.hpp	/^	BG_WHITE			= 107$/;"	e	enum:Color
BG_WHITE	get_next_line_upd/gnlTester/utils/color.hpp	/^	BG_WHITE			= 107$/;"	e	enum:Color
BG_YELLOW	get_next_line/gnlTester/utils/color.hpp	/^	BG_YELLOW 			= 43,$/;"	e	enum:Color
BG_YELLOW	get_next_line_upd/gnlTester/utils/color.hpp	/^	BG_YELLOW 			= 43,$/;"	e	enum:Color
BLINK	get_next_line/gnlTester/utils/color.hpp	/^	BLINK				= 5,$/;"	e	enum:Color
BLINK	get_next_line_upd/gnlTester/utils/color.hpp	/^	BLINK				= 5,$/;"	e	enum:Color
BOLD	get_next_line/gnlTester/utils/color.hpp	/^	BOLD				= 1,$/;"	e	enum:Color
BOLD	get_next_line_upd/gnlTester/utils/color.hpp	/^	BOLD				= 1,$/;"	e	enum:Color
BONUS	get_next_line/gnlTester/Makefile	/^BONUS					= bonus$/;"	m
BONUS	get_next_line_upd/gnlTester/Makefile	/^BONUS					= bonus$/;"	m
BONUS_FILES	get_next_line/gnlTester/Makefile	/^BONUS_FILES				= ..\/get_next_line_bonus.c ..\/get_next_line_utils_bonus.c$/;"	m
BONUS_FILES	get_next_line_upd/gnlTester/Makefile	/^BONUS_FILES				= ..\/get_next_line_bonus.c ..\/get_next_line_utils_bonus.c$/;"	m
BONUS_HEADER	get_next_line/gnlTester/Makefile	/^BONUS_HEADER			= ..\/get_next_line_bonus.h$/;"	m
BONUS_HEADER	get_next_line_upd/gnlTester/Makefile	/^BONUS_HEADER			= ..\/get_next_line_bonus.h$/;"	m
BONUS_OBJS	get_next_line/gnlTester/Makefile	/^BONUS_OBJS				= $(BONUS_FILES:..\/%.c=%.o)$/;"	m
BONUS_OBJS	get_next_line_upd/gnlTester/Makefile	/^BONUS_OBJS				= $(BONUS_FILES:..\/%.c=%.o)$/;"	m
BUFFER_SIZE	get_next_line/get_next_line.h	/^#  define BUFFER_SIZE /;"	d
BUFFER_SIZE	get_next_line/get_next_line_bonus.h	/^#  define BUFFER_SIZE /;"	d
BUFFER_SIZE	get_next_line_upd/get_next_line.h	/^#  define BUFFER_SIZE /;"	d
BUFFER_SIZE	get_next_line_upd/get_next_line_bonus.h	/^#  define BUFFER_SIZE /;"	d
CC	ft_printf/Libft/Makefile	/^CC = cc$/;"	m
CC	ft_printf/Makefile	/^CC = cc$/;"	m
CC	libft/Makefile	/^CC = cc$/;"	m
CFLAGS	ft_printf/Libft/Makefile	/^CFLAGS = -Wall -Wextra -Werror$/;"	m
CFLAGS	ft_printf/Makefile	/^CFLAGS = -Wall -Wextra -Werror$/;"	m
CFLAGS	get_next_line/gnlTester/Makefile	/^CFLAGS					= -g3 -Wall -Wextra -Werror$/;"	m
CFLAGS	get_next_line_upd/gnlTester/Makefile	/^CFLAGS					= -g3 -Wall -Wextra -Werror$/;"	m
CFLAGS	libft/Makefile	/^CFLAGS = -Wall -Wextra -Werror$/;"	m
CHECK_HPP	get_next_line/gnlTester/utils/check.hpp	/^# define CHECK_HPP$/;"	d
CHECK_HPP	get_next_line_upd/gnlTester/utils/check.hpp	/^# define CHECK_HPP$/;"	d
COLOR_HPP	get_next_line/gnlTester/utils/color.hpp	/^# define COLOR_HPP$/;"	d
COLOR_HPP	get_next_line_upd/gnlTester/utils/color.hpp	/^# define COLOR_HPP$/;"	d
CPPFLAGS	get_next_line/gnlTester/Makefile	/^CPPFLAGS				= -g3 -ldl -std=c++11 -I utils\/ -I.. -Wno-everything$/;"	m
CPPFLAGS	get_next_line_upd/gnlTester/Makefile	/^CPPFLAGS				= -g3 -ldl -std=c++11 -I utils\/ -I.. -Wno-everything$/;"	m
Color	get_next_line/gnlTester/utils/color.hpp	/^enum Color$/;"	g
Color	get_next_line_upd/gnlTester/utils/color.hpp	/^enum Color$/;"	g
DIM	get_next_line/gnlTester/utils/color.hpp	/^	DIM					= 2,$/;"	e	enum:Color
DIM	get_next_line_upd/gnlTester/utils/color.hpp	/^	DIM					= 2,$/;"	e	enum:Color
ENDL	get_next_line/gnlTester/utils/color.hpp	/^# define ENDL /;"	d
ENDL	get_next_line_upd/gnlTester/utils/color.hpp	/^# define ENDL /;"	d
FG_BLACK	get_next_line/gnlTester/utils/color.hpp	/^	FG_BLACK			= 30,$/;"	e	enum:Color
FG_BLACK	get_next_line_upd/gnlTester/utils/color.hpp	/^	FG_BLACK			= 30,$/;"	e	enum:Color
FG_BLUE	get_next_line/gnlTester/utils/color.hpp	/^	FG_BLUE				= 34,$/;"	e	enum:Color
FG_BLUE	get_next_line_upd/gnlTester/utils/color.hpp	/^	FG_BLUE				= 34,$/;"	e	enum:Color
FG_CYAN	get_next_line/gnlTester/utils/color.hpp	/^	FG_CYAN				= 36,$/;"	e	enum:Color
FG_CYAN	get_next_line_upd/gnlTester/utils/color.hpp	/^	FG_CYAN				= 36,$/;"	e	enum:Color
FG_DEFAULT	get_next_line/gnlTester/utils/color.hpp	/^	FG_DEFAULT			= 39,$/;"	e	enum:Color
FG_DEFAULT	get_next_line_upd/gnlTester/utils/color.hpp	/^	FG_DEFAULT			= 39,$/;"	e	enum:Color
FG_DGRAY	get_next_line/gnlTester/utils/color.hpp	/^	FG_DGRAY			= 90,$/;"	e	enum:Color
FG_DGRAY	get_next_line_upd/gnlTester/utils/color.hpp	/^	FG_DGRAY			= 90,$/;"	e	enum:Color
FG_GREEN	get_next_line/gnlTester/utils/color.hpp	/^	FG_GREEN			= 32,$/;"	e	enum:Color
FG_GREEN	get_next_line_upd/gnlTester/utils/color.hpp	/^	FG_GREEN			= 32,$/;"	e	enum:Color
FG_LBLUE	get_next_line/gnlTester/utils/color.hpp	/^	FG_LBLUE			= 94,$/;"	e	enum:Color
FG_LBLUE	get_next_line_upd/gnlTester/utils/color.hpp	/^	FG_LBLUE			= 94,$/;"	e	enum:Color
FG_LCYAN	get_next_line/gnlTester/utils/color.hpp	/^	FG_LCYAN			= 96,$/;"	e	enum:Color
FG_LCYAN	get_next_line_upd/gnlTester/utils/color.hpp	/^	FG_LCYAN			= 96,$/;"	e	enum:Color
FG_LGRAY	get_next_line/gnlTester/utils/color.hpp	/^	FG_LGRAY			= 37,$/;"	e	enum:Color
FG_LGRAY	get_next_line_upd/gnlTester/utils/color.hpp	/^	FG_LGRAY			= 37,$/;"	e	enum:Color
FG_LGREEN	get_next_line/gnlTester/utils/color.hpp	/^	FG_LGREEN			= 92,$/;"	e	enum:Color
FG_LGREEN	get_next_line_upd/gnlTester/utils/color.hpp	/^	FG_LGREEN			= 92,$/;"	e	enum:Color
FG_LMAGENTA	get_next_line/gnlTester/utils/color.hpp	/^	FG_LMAGENTA			= 95,$/;"	e	enum:Color
FG_LMAGENTA	get_next_line_upd/gnlTester/utils/color.hpp	/^	FG_LMAGENTA			= 95,$/;"	e	enum:Color
FG_LRED	get_next_line/gnlTester/utils/color.hpp	/^	FG_LRED				= 91,$/;"	e	enum:Color
FG_LRED	get_next_line_upd/gnlTester/utils/color.hpp	/^	FG_LRED				= 91,$/;"	e	enum:Color
FG_LYELLOW	get_next_line/gnlTester/utils/color.hpp	/^	FG_LYELLOW			= 93,$/;"	e	enum:Color
FG_LYELLOW	get_next_line_upd/gnlTester/utils/color.hpp	/^	FG_LYELLOW			= 93,$/;"	e	enum:Color
FG_MAGENTA	get_next_line/gnlTester/utils/color.hpp	/^	FG_MAGENTA			= 35,$/;"	e	enum:Color
FG_MAGENTA	get_next_line_upd/gnlTester/utils/color.hpp	/^	FG_MAGENTA			= 35,$/;"	e	enum:Color
FG_RED	get_next_line/gnlTester/utils/color.hpp	/^	FG_RED				= 31,$/;"	e	enum:Color
FG_RED	get_next_line_upd/gnlTester/utils/color.hpp	/^	FG_RED				= 31,$/;"	e	enum:Color
FG_WHITE	get_next_line/gnlTester/utils/color.hpp	/^	FG_WHITE			= 97,$/;"	e	enum:Color
FG_WHITE	get_next_line_upd/gnlTester/utils/color.hpp	/^	FG_WHITE			= 97,$/;"	e	enum:Color
FG_YELLOW	get_next_line/gnlTester/utils/color.hpp	/^	FG_YELLOW 			= 33,$/;"	e	enum:Color
FG_YELLOW	get_next_line_upd/gnlTester/utils/color.hpp	/^	FG_YELLOW 			= 33,$/;"	e	enum:Color
FT_PRINTF_H	ft_printf/ft_printf.h	/^# define FT_PRINTF_H$/;"	d
GET_NEXT_LINE_BONUS_H	get_next_line/bonus/get_next_line_bonus.h	/^# define GET_NEXT_LINE_BONUS_H$/;"	d
GET_NEXT_LINE_BONUS_H	get_next_line/get_next_line_bonus.h	/^# define GET_NEXT_LINE_BONUS_H$/;"	d
GET_NEXT_LINE_BONUS_H	get_next_line_upd/bonus/get_next_line_bonus.h	/^# define GET_NEXT_LINE_BONUS_H$/;"	d
GET_NEXT_LINE_BONUS_H	get_next_line_upd/get_next_line_bonus.h	/^# define GET_NEXT_LINE_BONUS_H$/;"	d
GET_NEXT_LINE_H	get_next_line/get_next_line.h	/^# define GET_NEXT_LINE_H$/;"	d
GET_NEXT_LINE_H	get_next_line_upd/get_next_line.h	/^# define GET_NEXT_LINE_H$/;"	d
GNL_HPP	get_next_line/gnlTester/utils/gnl.hpp	/^# define GNL_HPP$/;"	d
GNL_HPP	get_next_line_upd/gnlTester/utils/gnl.hpp	/^# define GNL_HPP$/;"	d
HIDDEN	get_next_line/gnlTester/utils/color.hpp	/^	HIDDEN				= 8,$/;"	e	enum:Color
HIDDEN	get_next_line_upd/gnlTester/utils/color.hpp	/^	HIDDEN				= 8,$/;"	e	enum:Color
LEAK_HPP	get_next_line/gnlTester/utils/leaks.hpp	/^# define LEAK_HPP$/;"	d
LEAK_HPP	get_next_line_upd/gnlTester/utils/leaks.hpp	/^# define LEAK_HPP$/;"	d
LIBFT_H	ft_printf/Libft/libft.h	/^# define LIBFT_H$/;"	d
LIBFT_H	libft/libft.h	/^# define LIBFT_H$/;"	d
LL_MAX	ft_printf/Libft/libft.h	/^# define LL_MAX /;"	d
LL_MAX	libft/libft.h	/^# define LL_MAX /;"	d
MANDATORY	get_next_line/gnlTester/Makefile	/^MANDATORY				= mandatory$/;"	m
MANDATORY	get_next_line_upd/gnlTester/Makefile	/^MANDATORY				= mandatory$/;"	m
MANDATORY_FILES	get_next_line/gnlTester/Makefile	/^MANDATORY_FILES			= ..\/get_next_line.c ..\/get_next_line_utils.c$/;"	m
MANDATORY_FILES	get_next_line_upd/gnlTester/Makefile	/^MANDATORY_FILES			= ..\/get_next_line.c ..\/get_next_line_utils.c$/;"	m
MANDATORY_HEADER	get_next_line/gnlTester/Makefile	/^MANDATORY_HEADER		= ..\/get_next_line.h$/;"	m
MANDATORY_HEADER	get_next_line_upd/gnlTester/Makefile	/^MANDATORY_HEADER		= ..\/get_next_line.h$/;"	m
MANDATORY_OBJS	get_next_line/gnlTester/Makefile	/^MANDATORY_OBJS			= $(MANDATORY_FILES:..\/%.c=%.o)$/;"	m
MANDATORY_OBJS	get_next_line_upd/gnlTester/Makefile	/^MANDATORY_OBJS			= $(MANDATORY_FILES:..\/%.c=%.o)$/;"	m
NAME	ft_printf/Libft/Makefile	/^NAME = libft.a$/;"	m
NAME	ft_printf/Makefile	/^NAME = libftprintf.a$/;"	m
NAME	libft/Makefile	/^NAME = libft.a$/;"	m
OBJS	ft_printf/Libft/Makefile	/^OBJS = $(SRCS:.c=.o)$/;"	m
OBJS	ft_printf/Makefile	/^OBJS = $(SRCS:c=o) $/;"	m
OBJS	libft/Makefile	/^OBJS = $(SRCS:.c=.o)$/;"	m
OBJS_BONUS	ft_printf/Libft/Makefile	/^OBJS_BONUS = $(SRCS_BONUS:.c=.o)$/;"	m
OBJS_BONUS	libft/Makefile	/^OBJS_BONUS = $(SRCS_BONUS:.c=.o)$/;"	m
OPEN_FD_MAX	get_next_line/bonus/get_next_line_bonus.h	/^# define OPEN_FD_MAX /;"	d
OPEN_FD_MAX	get_next_line/get_next_line.h	/^# define OPEN_FD_MAX /;"	d
OPEN_FD_MAX	get_next_line/get_next_line_bonus.h	/^# define OPEN_FD_MAX /;"	d
OPEN_FD_MAX	get_next_line_upd/bonus/get_next_line_bonus.h	/^# define OPEN_FD_MAX /;"	d
OPEN_FD_MAX	get_next_line_upd/get_next_line.h	/^# define OPEN_FD_MAX /;"	d
OPEN_FD_MAX	get_next_line_upd/get_next_line_bonus.h	/^# define OPEN_FD_MAX /;"	d
PATH	gnl_tc/test.c	/^#define PATH /;"	d	file:
PATH	libft_tc/Libft.c	/^#define PATH /;"	d	file:
PATH	libft_tc/strnstr_null.c	/^#define PATH /;"	d	file:
RESET_ALL	get_next_line/gnlTester/utils/color.hpp	/^	RESET_ALL			= 0,$/;"	e	enum:Color
RESET_ALL	get_next_line_upd/gnlTester/utils/color.hpp	/^	RESET_ALL			= 0,$/;"	e	enum:Color
RESET_BLINK	get_next_line/gnlTester/utils/color.hpp	/^	RESET_BLINK			= 25,$/;"	e	enum:Color
RESET_BLINK	get_next_line_upd/gnlTester/utils/color.hpp	/^	RESET_BLINK			= 25,$/;"	e	enum:Color
RESET_BOLD	get_next_line/gnlTester/utils/color.hpp	/^	RESET_BOLD			= 21,$/;"	e	enum:Color
RESET_BOLD	get_next_line_upd/gnlTester/utils/color.hpp	/^	RESET_BOLD			= 21,$/;"	e	enum:Color
RESET_DIM	get_next_line/gnlTester/utils/color.hpp	/^	RESET_DIM			= 22,$/;"	e	enum:Color
RESET_DIM	get_next_line_upd/gnlTester/utils/color.hpp	/^	RESET_DIM			= 22,$/;"	e	enum:Color
RESET_HIDDEN	get_next_line/gnlTester/utils/color.hpp	/^	RESET_HIDDEN		= 28,$/;"	e	enum:Color
RESET_HIDDEN	get_next_line_upd/gnlTester/utils/color.hpp	/^	RESET_HIDDEN		= 28,$/;"	e	enum:Color
RESET_REVERSED	get_next_line/gnlTester/utils/color.hpp	/^	RESET_REVERSED		= 27,$/;"	e	enum:Color
RESET_REVERSED	get_next_line_upd/gnlTester/utils/color.hpp	/^	RESET_REVERSED		= 27,$/;"	e	enum:Color
RESET_UNDERLINED	get_next_line/gnlTester/utils/color.hpp	/^	RESET_UNDERLINED	= 24,$/;"	e	enum:Color
RESET_UNDERLINED	get_next_line_upd/gnlTester/utils/color.hpp	/^	RESET_UNDERLINED	= 24,$/;"	e	enum:Color
REVERSED	get_next_line/gnlTester/utils/color.hpp	/^	REVERSED			= 7,$/;"	e	enum:Color
REVERSED	get_next_line_upd/gnlTester/utils/color.hpp	/^	REVERSED			= 7,$/;"	e	enum:Color
SHELL	get_next_line/gnlTester/Makefile	/^SHELL					= bash$/;"	m
SHELL	get_next_line_upd/gnlTester/Makefile	/^SHELL					= bash$/;"	m
SIGSEGV_HPP	get_next_line/gnlTester/utils/sigsegv.hpp	/^# define SIGSEGV_HPP$/;"	d
SIGSEGV_HPP	get_next_line_upd/gnlTester/utils/sigsegv.hpp	/^# define SIGSEGV_HPP$/;"	d
SRCS	ft_printf/Libft/Makefile	/^SRCS = ft_isalpha.c 	\\$/;"	m
SRCS	ft_printf/Makefile	/^SRCS = ft_printf.c \\$/;"	m
SRCS	libft/Makefile	/^SRCS = ft_isalpha.c 	\\$/;"	m
SRCS_BONUS	ft_printf/Libft/Makefile	/^SRCS_BONUS = ft_lstnew.c \\$/;"	m
SRCS_BONUS	libft/Makefile	/^SRCS_BONUS = ft_lstnew.c \\$/;"	m
TEST	get_next_line/gnlTester/utils/gnl.hpp	/^#define TEST(/;"	d
TEST	get_next_line_upd/gnlTester/utils/gnl.hpp	/^#define TEST(/;"	d
TESTS_PATH	get_next_line/gnlTester/Makefile	/^TESTS_PATH				= tests\/$/;"	m
TESTS_PATH	get_next_line_upd/gnlTester/Makefile	/^TESTS_PATH				= tests\/$/;"	m
TIMEOUT_US	get_next_line/gnlTester/Makefile	/^TIMEOUT_US				= 1000000$/;"	m
TIMEOUT_US	get_next_line_upd/gnlTester/Makefile	/^TIMEOUT_US				= 1000000$/;"	m
UNAME	get_next_line/gnlTester/Makefile	/^UNAME = $(shell uname -s)$/;"	m
UNAME	get_next_line_upd/gnlTester/Makefile	/^UNAME = $(shell uname -s)$/;"	m
UNDERLINED	get_next_line/gnlTester/utils/color.hpp	/^	UNDERLINED			= 4,$/;"	e	enum:Color
UNDERLINED	get_next_line_upd/gnlTester/utils/color.hpp	/^	UNDERLINED			= 4,$/;"	e	enum:Color
UTILS	get_next_line/gnlTester/Makefile	/^UTILS					= utils\/sigsegv.cpp utils\/color.cpp utils\/check.cpp utils\/gnl.cpp utils\/leaks.cpp$/;"	m
UTILS	get_next_line_upd/gnlTester/Makefile	/^UTILS					= utils\/sigsegv.cpp utils\/color.cpp utils\/check.cpp utils\/gnl.cpp utils\/leaks.cpp$/;"	m
VALGRIND	get_next_line/gnlTester/Makefile	/^    VALGRIND = valgrind -q --leak-check=full$/;"	m
VALGRIND	get_next_line_upd/gnlTester/Makefile	/^    VALGRIND = valgrind -q --leak-check=full$/;"	m
a	gnl_tc/static.c	/^	char	*a;$/;"	m	struct:s_str	file:
a	gnl_tc/static.c	/^	int	a;$/;"	m	struct:s_line	file:
assign_ret	ft_printf/Libft/ft_itoa.c	/^static void	assign_ret(char *str, int n, int is_neg)$/;"	f	file:
assign_ret	libft/ft_itoa.c	/^static void	assign_ret(char *str, int n, int is_neg)$/;"	f	file:
b	gnl_tc/static.c	/^	char	*b;$/;"	m	struct:s_str	file:
b	gnl_tc/static.c	/^	int	b;$/;"	m	struct:s_line	file:
check	get_next_line/gnlTester/utils/check.cpp	/^void check(bool succes)$/;"	f
check	get_next_line_upd/gnlTester/utils/check.cpp	/^void check(bool succes)$/;"	f
content	ft_printf/Libft/libft.h	/^	void			*content;$/;"	m	struct:s_list
content	libft/libft.h	/^	void			*content;$/;"	m	struct:s_list
daprintf	printf_tc/attribute.c	/^void daprintf(int error_level, char *fmt, ...)$/;"	f
foo	printf_tc/attribute.c	/^void foo()$/;"	f
foo	printf_tc/tmp.c	/^void foo(void)$/;"	f
free	get_next_line/gnlTester/utils/leaks.cpp	/^void free(void * p) throw()$/;"	f
free	get_next_line_upd/gnlTester/utils/leaks.cpp	/^void free(void * p) throw()$/;"	f
free_alloc	ft_printf/Libft/ft_lstmap.c	/^static t_list	*free_alloc(t_list **lst, void (*del)(void *))$/;"	f	file:
free_alloc	ft_printf/Libft/ft_split.c	/^static char	**free_alloc(char **ptr, int i)$/;"	f	file:
free_alloc	libft/ft_lstmap.c	/^static t_list	*free_alloc(t_list **lst, void (*del)(void *))$/;"	f	file:
free_alloc	libft/ft_split.c	/^static char	**free_alloc(char **ptr, int i)$/;"	f	file:
ft_atoi	ft_printf/Libft/ft_atoi.c	/^int	ft_atoi(const char *str)$/;"	f
ft_atoi	libft/ft_atoi.c	/^int	ft_atoi(const char *str)$/;"	f
ft_bzero	ft_printf/Libft/ft_bzero.c	/^void	ft_bzero(void *ptr, size_t n)$/;"	f
ft_bzero	libft/ft_bzero.c	/^void	ft_bzero(void *ptr, size_t n)$/;"	f
ft_calloc	ft_printf/Libft/ft_calloc.c	/^void	*ft_calloc(size_t count, size_t size)$/;"	f
ft_calloc	libft/ft_calloc.c	/^void	*ft_calloc(size_t count, size_t size)$/;"	f
ft_free	get_next_line/bonus/get_next_line_bonus.c	/^static char	*ft_free(t_line *line)$/;"	f	file:
ft_free	get_next_line/get_next_line.c	/^static char	*ft_free(t_line *line)$/;"	f	file:
ft_free	get_next_line/get_next_line_bonus.c	/^static char	*ft_free(t_line *line)$/;"	f	file:
ft_free	get_next_line_upd/bonus/get_next_line_bonus.c	/^static char	*ft_free(t_line *line)$/;"	f	file:
ft_free	get_next_line_upd/get_next_line.c	/^static char	*ft_free(t_line *line)$/;"	f	file:
ft_free	get_next_line_upd/get_next_line_bonus.c	/^static char	*ft_free(t_line *line)$/;"	f	file:
ft_isalnum	ft_printf/Libft/ft_isalnum.c	/^int	ft_isalnum(int ch)$/;"	f
ft_isalnum	libft/ft_isalnum.c	/^int	ft_isalnum(int ch)$/;"	f
ft_isalpha	ft_printf/Libft/ft_isalpha.c	/^int	ft_isalpha(int ch)$/;"	f
ft_isalpha	libft/ft_isalpha.c	/^int	ft_isalpha(int ch)$/;"	f
ft_isascii	ft_printf/Libft/ft_isascii.c	/^int	ft_isascii(int ch)$/;"	f
ft_isascii	libft/ft_isascii.c	/^int	ft_isascii(int ch)$/;"	f
ft_isdigit	ft_printf/Libft/ft_isdigit.c	/^int	ft_isdigit(int ch)$/;"	f
ft_isdigit	libft/ft_isdigit.c	/^int	ft_isdigit(int ch)$/;"	f
ft_isprint	ft_printf/Libft/ft_isprint.c	/^int	ft_isprint(int ch)$/;"	f
ft_isprint	libft/ft_isprint.c	/^int	ft_isprint(int ch)$/;"	f
ft_itoa	ft_printf/Libft/ft_itoa.c	/^char	*ft_itoa(int n)$/;"	f
ft_itoa	libft/ft_itoa.c	/^char	*ft_itoa(int n)$/;"	f
ft_len	ft_printf/Libft/ft_itoa.c	/^static int	ft_len(int n)$/;"	f	file:
ft_len	libft/ft_itoa.c	/^static int	ft_len(int n)$/;"	f	file:
ft_lstadd_back	ft_printf/Libft/ft_lstadd_back.c	/^void	ft_lstadd_back(t_list **lst, t_list *new)$/;"	f
ft_lstadd_back	libft/ft_lstadd_back.c	/^void	ft_lstadd_back(t_list **lst, t_list *new)$/;"	f
ft_lstadd_front	ft_printf/Libft/ft_lstadd_front.c	/^void	ft_lstadd_front(t_list **lst, t_list *new)$/;"	f
ft_lstadd_front	libft/ft_lstadd_front.c	/^void	ft_lstadd_front(t_list **lst, t_list *new)$/;"	f
ft_lstclear	ft_printf/Libft/ft_lstclear.c	/^void	ft_lstclear(t_list **lst, void (*del)(void *))$/;"	f
ft_lstclear	libft/ft_lstclear.c	/^void	ft_lstclear(t_list **lst, void (*del)(void *))$/;"	f
ft_lstdelone	ft_printf/Libft/ft_lstdelone.c	/^void	ft_lstdelone(t_list *lst, void (*del)(void*))$/;"	f
ft_lstdelone	libft/ft_lstdelone.c	/^void	ft_lstdelone(t_list *lst, void (*del)(void*))$/;"	f
ft_lstiter	ft_printf/Libft/ft_lstiter.c	/^void	ft_lstiter(t_list *lst, void (*f)(void *))$/;"	f
ft_lstiter	libft/ft_lstiter.c	/^void	ft_lstiter(t_list *lst, void (*f)(void *))$/;"	f
ft_lstlast	ft_printf/Libft/ft_lstlast.c	/^t_list	*ft_lstlast(t_list *lst)$/;"	f
ft_lstlast	libft/ft_lstlast.c	/^t_list	*ft_lstlast(t_list *lst)$/;"	f
ft_lstmap	ft_printf/Libft/ft_lstmap.c	/^t_list	*ft_lstmap(t_list *lst, void *(*f)(void *), void (*del)(void *))$/;"	f
ft_lstmap	libft/ft_lstmap.c	/^t_list	*ft_lstmap(t_list *lst, void *(*f)(void *), void (*del)(void *))$/;"	f
ft_lstnew	ft_printf/Libft/ft_lstnew.c	/^t_list	*ft_lstnew(void *content)$/;"	f
ft_lstnew	libft/ft_lstnew.c	/^t_list	*ft_lstnew(void *content)$/;"	f
ft_lstsize	ft_printf/Libft/ft_lstsize.c	/^int	ft_lstsize(t_list *lst)$/;"	f
ft_lstsize	libft/ft_lstsize.c	/^int	ft_lstsize(t_list *lst)$/;"	f
ft_memchr	ft_printf/Libft/ft_memchr.c	/^void	*ft_memchr(const void *str, int ch, size_t n)$/;"	f
ft_memchr	libft/ft_memchr.c	/^void	*ft_memchr(const void *str, int ch, size_t n)$/;"	f
ft_memcmp	ft_printf/Libft/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, size_t n)$/;"	f
ft_memcmp	libft/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, size_t n)$/;"	f
ft_memcpy	ft_printf/Libft/ft_memcpy.c	/^void	*ft_memcpy(void *dst, const void *src, size_t n)$/;"	f
ft_memcpy	libft/ft_memcpy.c	/^void	*ft_memcpy(void *dst, const void *src, size_t n)$/;"	f
ft_memmove	ft_printf/Libft/ft_memmove.c	/^void	*ft_memmove(void *dst, const void *src, size_t len)$/;"	f
ft_memmove	libft/ft_memmove.c	/^void	*ft_memmove(void *dst, const void *src, size_t len)$/;"	f
ft_memset	ft_printf/Libft/ft_memset.c	/^void	*ft_memset(void *ptr, int value, size_t len)$/;"	f
ft_memset	libft/ft_memset.c	/^void	*ft_memset(void *ptr, int value, size_t len)$/;"	f
ft_printf	ft_printf/ft_printf.c	/^int	ft_printf(const char *format, ...)$/;"	f
ft_putchar_fd	ft_printf/Libft/ft_putchar_fd.c	/^void	ft_putchar_fd(char ch, int fd)$/;"	f
ft_putchar_fd	libft/ft_putchar_fd.c	/^void	ft_putchar_fd(char ch, int fd)$/;"	f
ft_putendl_fd	ft_printf/Libft/ft_putendl_fd.c	/^void	ft_putendl_fd(char *str, int fd)$/;"	f
ft_putendl_fd	libft/ft_putendl_fd.c	/^void	ft_putendl_fd(char *str, int fd)$/;"	f
ft_putnbr_fd	ft_printf/Libft/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/;"	f
ft_putnbr_fd	libft/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/;"	f
ft_putstr_fd	ft_printf/Libft/ft_putstr_fd.c	/^void	ft_putstr_fd(char *str, int fd)$/;"	f
ft_putstr_fd	libft/ft_putstr_fd.c	/^void	ft_putstr_fd(char *str, int fd)$/;"	f
ft_split	ft_printf/Libft/ft_split.c	/^char	**ft_split(char const *str, char ch)$/;"	f
ft_split	libft/ft_split.c	/^char	**ft_split(char const *str, char ch)$/;"	f
ft_strchr	ft_printf/Libft/ft_strchr.c	/^char	*ft_strchr(const char *str, int ch)$/;"	f
ft_strchr	libft/ft_strchr.c	/^char	*ft_strchr(const char *str, int ch)$/;"	f
ft_strdup	ft_printf/Libft/ft_strdup.c	/^char	*ft_strdup(const char *str)$/;"	f
ft_strdup	libft/ft_strdup.c	/^char	*ft_strdup(const char *str)$/;"	f
ft_striteri	ft_printf/Libft/ft_striteri.c	/^void	ft_striteri(char *str, void (*f)(unsigned int, char *))$/;"	f
ft_striteri	libft/ft_striteri.c	/^void	ft_striteri(char *str, void (*f)(unsigned int, char *))$/;"	f
ft_strjoin	ft_printf/Libft/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/;"	f
ft_strjoin	libft/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/;"	f
ft_strlcat	ft_printf/Libft/ft_strlcat.c	/^size_t	ft_strlcat(char *dst, const char *src, size_t dst_size)$/;"	f
ft_strlcat	libft/ft_strlcat.c	/^size_t	ft_strlcat(char *dst, const char *src, size_t dst_size)$/;"	f
ft_strlcpy	ft_printf/Libft/ft_strlcpy.c	/^size_t	ft_strlcpy(char *dst, const char *src, size_t dst_size)$/;"	f
ft_strlcpy	libft/ft_strlcpy.c	/^size_t	ft_strlcpy(char *dst, const char *src, size_t dst_size)$/;"	f
ft_strlen	ft_printf/Libft/ft_strlen.c	/^size_t	ft_strlen(const char *str)$/;"	f
ft_strlen	libft/ft_strlen.c	/^size_t	ft_strlen(const char *str)$/;"	f
ft_strlen	printf_tc/ft_strlen.c	/^int	ft_strlen(char *str)$/;"	f
ft_strmapi	ft_printf/Libft/ft_strmapi.c	/^char	*ft_strmapi(char const *str, char (*f)(unsigned int, char))$/;"	f
ft_strmapi	libft/ft_strmapi.c	/^char	*ft_strmapi(char const *str, char (*f)(unsigned int, char))$/;"	f
ft_strncmp	ft_printf/Libft/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f
ft_strncmp	libft/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f
ft_strnstr	ft_printf/Libft/ft_strnstr.c	/^char	*ft_strnstr(const char *haystack, const char *needle, size_t len)$/;"	f
ft_strnstr	libft/ft_strnstr.c	/^char	*ft_strnstr(const char *haystack, const char *needle, size_t len)$/;"	f
ft_strrchr	ft_printf/Libft/ft_strrchr.c	/^char	*ft_strrchr(const char *str, int ch)$/;"	f
ft_strrchr	libft/ft_strrchr.c	/^char	*ft_strrchr(const char *str, int ch)$/;"	f
ft_strtrim	ft_printf/Libft/ft_strtrim.c	/^char	*ft_strtrim(char const *s1, char const *set)$/;"	f
ft_strtrim	libft/ft_strtrim.c	/^char	*ft_strtrim(char const *s1, char const *set)$/;"	f
ft_substr	ft_printf/Libft/ft_substr.c	/^char	*ft_substr(char const *str, unsigned int start, size_t len)$/;"	f
ft_substr	libft/ft_substr.c	/^char	*ft_substr(char const *str, unsigned int start, size_t len)$/;"	f
ft_tolower	ft_printf/Libft/ft_tolower.c	/^int	ft_tolower(int ch)$/;"	f
ft_tolower	libft/ft_tolower.c	/^int	ft_tolower(int ch)$/;"	f
ft_toupper	ft_printf/Libft/ft_toupper.c	/^int	ft_toupper(int ch)$/;"	f
ft_toupper	libft/ft_toupper.c	/^int	ft_toupper(int ch)$/;"	f
ft_word_cnt	ft_printf/Libft/ft_split.c	/^static int	ft_word_cnt(char const *str, char ch)$/;"	f	file:
ft_word_cnt	libft/ft_split.c	/^static int	ft_word_cnt(char const *str, char ch)$/;"	f	file:
func	gnl_tc/static.c	/^void	func(void)$/;"	f
func	gnl_tc/static_param.c	/^void	func(int num)$/;"	f
func2	gnl_tc/static.c	/^void	func2(void)$/;"	f
func2	gnl_tc/static_param.c	/^int	func2()$/;"	f
g_debug_level	printf_tc/attribute.c	/^int g_debug_level = 0;$/;"	v
get_eof	get_next_line/bonus/get_next_line_bonus.c	/^char	*get_eof(t_line *line)$/;"	f
get_eof	get_next_line_upd/bonus/get_next_line_bonus.c	/^char	*get_eof(t_line *line)$/;"	f
get_eof_line	get_next_line/get_next_line.c	/^char	*get_eof_line(t_line *line)$/;"	f
get_eof_line	get_next_line/get_next_line_bonus.c	/^static char	*get_eof_line(t_line *line)$/;"	f	file:
get_eof_line	get_next_line_upd/get_next_line.c	/^char	*get_eof_line(t_line *line)$/;"	f
get_eof_line	get_next_line_upd/get_next_line_bonus.c	/^static char	*get_eof_line(t_line *line)$/;"	f	file:
get_next_line	get_next_line/bonus/get_next_line_bonus.c	/^char	*get_next_line(int fd)$/;"	f
get_next_line	get_next_line/get_next_line.c	/^char	*get_next_line(int fd)$/;"	f
get_next_line	get_next_line/get_next_line_bonus.c	/^char	*get_next_line(int fd)$/;"	f
get_next_line	get_next_line_upd/bonus/get_next_line_bonus.c	/^char	*get_next_line(int fd)$/;"	f
get_next_line	get_next_line_upd/get_next_line.c	/^char	*get_next_line(int fd)$/;"	f
get_next_line	get_next_line_upd/get_next_line_bonus.c	/^char	*get_next_line(int fd)$/;"	f
get_nl_line	get_next_line/get_next_line.c	/^static char	*get_nl_line(t_line *line)$/;"	f	file:
get_nl_line	get_next_line/get_next_line_bonus.c	/^static char	*get_nl_line(t_line *line)$/;"	f	file:
get_nl_line	get_next_line_upd/get_next_line.c	/^static char	*get_nl_line(t_line *line)$/;"	f	file:
get_nl_line	get_next_line_upd/get_next_line_bonus.c	/^static char	*get_nl_line(t_line *line)$/;"	f	file:
gnl	get_next_line/gnlTester/utils/gnl.cpp	/^void gnl(int fd, char const * expectedReturn)$/;"	f
gnl	get_next_line_upd/gnlTester/utils/gnl.cpp	/^void gnl(int fd, char const * expectedReturn)$/;"	f
gnl_get_idx	get_next_line/get_next_line_utils.c	/^ssize_t	gnl_get_idx(const char *str, char ch)$/;"	f
gnl_get_idx	get_next_line/get_next_line_utils_bonus.c	/^ssize_t	gnl_get_idx(const char *str, char ch)$/;"	f
gnl_get_idx	get_next_line_upd/get_next_line_utils.c	/^ssize_t	gnl_get_idx(const char *str, char ch)$/;"	f
gnl_get_idx	get_next_line_upd/get_next_line_utils_bonus.c	/^ssize_t	gnl_get_idx(const char *str, char ch)$/;"	f
gnl_strchr	get_next_line/bonus/get_next_line_utils_bonus.c	/^char	*gnl_strchr(const char *str, int ch)$/;"	f
gnl_strchr	get_next_line_upd/bonus/get_next_line_utils_bonus.c	/^char	*gnl_strchr(const char *str, int ch)$/;"	f
gnl_strdup	get_next_line/bonus/get_next_line_utils_bonus.c	/^char	*gnl_strdup(const char *str)$/;"	f
gnl_strdup	get_next_line/get_next_line_utils.c	/^char	*gnl_strdup(const char *str)$/;"	f
gnl_strdup	get_next_line/get_next_line_utils_bonus.c	/^char	*gnl_strdup(const char *str)$/;"	f
gnl_strdup	get_next_line_upd/bonus/get_next_line_utils_bonus.c	/^char	*gnl_strdup(const char *str)$/;"	f
gnl_strdup	get_next_line_upd/get_next_line_utils.c	/^char	*gnl_strdup(const char *str)$/;"	f
gnl_strdup	get_next_line_upd/get_next_line_utils_bonus.c	/^char	*gnl_strdup(const char *str)$/;"	f
gnl_strjoin	get_next_line/bonus/get_next_line_utils_bonus.c	/^char	*gnl_strjoin(t_line *line, char *buf)$/;"	f
gnl_strjoin	get_next_line/get_next_line_utils.c	/^char	*gnl_strjoin(t_line *line, const char *buf)$/;"	f
gnl_strjoin	get_next_line/get_next_line_utils_bonus.c	/^char	*gnl_strjoin(t_line *line, const char *buf)$/;"	f
gnl_strjoin	get_next_line_upd/bonus/get_next_line_utils_bonus.c	/^char	*gnl_strjoin(t_line *line, char *buf)$/;"	f
gnl_strjoin	get_next_line_upd/get_next_line_utils.c	/^char	*gnl_strjoin(t_line *line, const char *buf)$/;"	f
gnl_strjoin	get_next_line_upd/get_next_line_utils_bonus.c	/^char	*gnl_strjoin(t_line *line, const char *buf)$/;"	f
gnl_strlen	get_next_line/bonus/get_next_line_utils_bonus.c	/^size_t	gnl_strlen(const char *str)$/;"	f
gnl_strlen	get_next_line/get_next_line_utils.c	/^size_t	gnl_strlen(const char *str)$/;"	f
gnl_strlen	get_next_line/get_next_line_utils_bonus.c	/^size_t	gnl_strlen(const char *str)$/;"	f
gnl_strlen	get_next_line_upd/bonus/get_next_line_utils_bonus.c	/^size_t	gnl_strlen(const char *str)$/;"	f
gnl_strlen	get_next_line_upd/get_next_line_utils.c	/^size_t	gnl_strlen(const char *str)$/;"	f
gnl_strlen	get_next_line_upd/get_next_line_utils_bonus.c	/^size_t	gnl_strlen(const char *str)$/;"	f
gnl_substr	get_next_line/bonus/get_next_line_utils_bonus.c	/^char	*gnl_substr(t_line *line, size_t start, size_t len)$/;"	f
gnl_substr	get_next_line/get_next_line_utils.c	/^char	*gnl_substr(t_line *line, size_t start, size_t len)$/;"	f
gnl_substr	get_next_line/get_next_line_utils_bonus.c	/^char	*gnl_substr(t_line *line, size_t start, size_t len)$/;"	f
gnl_substr	get_next_line_upd/bonus/get_next_line_utils_bonus.c	/^char	*gnl_substr(t_line *line, size_t start, size_t len)$/;"	f
gnl_substr	get_next_line_upd/get_next_line_utils.c	/^char	*gnl_substr(t_line *line, size_t start, size_t len)$/;"	f
gnl_substr	get_next_line_upd/get_next_line_utils_bonus.c	/^char	*gnl_substr(t_line *line, size_t start, size_t len)$/;"	f
iTest	get_next_line/gnlTester/tests/bonus.cpp	/^int iTest = 1;$/;"	v
iTest	get_next_line/gnlTester/tests/mandatory.cpp	/^int iTest = 1;$/;"	v
iTest	get_next_line_upd/gnlTester/tests/bonus.cpp	/^int iTest = 1;$/;"	v
iTest	get_next_line_upd/gnlTester/tests/mandatory.cpp	/^int iTest = 1;$/;"	v
is_space	ft_printf/Libft/ft_atoi.c	/^static int	is_space(char ch)$/;"	f	file:
is_space	libft/ft_atoi.c	/^static int	is_space(char ch)$/;"	f	file:
len	get_next_line/bonus/get_next_line_bonus.h	/^	size_t	len;$/;"	m	struct:s_line
len	get_next_line/get_next_line.h	/^	size_t	len;$/;"	m	struct:s_line
len	get_next_line/get_next_line_bonus.h	/^	size_t	len;$/;"	m	struct:s_line
len	get_next_line_upd/bonus/get_next_line_bonus.h	/^	size_t	len;$/;"	m	struct:s_line
len	get_next_line_upd/get_next_line.h	/^	size_t	len;$/;"	m	struct:s_line
len	get_next_line_upd/get_next_line_bonus.h	/^	size_t	len;$/;"	m	struct:s_line
line_join	get_next_line/bonus/get_next_line_bonus.c	/^static char	*line_join(t_line *line, char *buf)$/;"	f	file:
line_join	get_next_line/get_next_line.c	/^static char	*line_join(t_line *line, char *buf)$/;"	f	file:
line_join	get_next_line/get_next_line_bonus.c	/^static char	*line_join(t_line *line, char *buf)$/;"	f	file:
line_join	get_next_line_upd/bonus/get_next_line_bonus.c	/^static char	*line_join(t_line *line, char *buf)$/;"	f	file:
line_join	get_next_line_upd/get_next_line.c	/^static char	*line_join(t_line *line, char *buf)$/;"	f	file:
line_join	get_next_line_upd/get_next_line_bonus.c	/^static char	*line_join(t_line *line, char *buf)$/;"	f	file:
lstmap_f	libft_tc/Libft.c	/^void	*lstmap_f(void *content)$/;"	f
main	get_next_line/gnlTester/tests/bonus.cpp	/^int main(void)$/;"	f
main	get_next_line/gnlTester/tests/mandatory.cpp	/^int main(void)$/;"	f
main	get_next_line_upd/gnlTester/tests/bonus.cpp	/^int main(void)$/;"	f
main	get_next_line_upd/gnlTester/tests/mandatory.cpp	/^int main(void)$/;"	f
main	gnl_tc/eof.c	/^int	main(void)$/;"	f
main	gnl_tc/open_max.c	/^int	main(void){$/;"	f
main	gnl_tc/static.c	/^int	main(void)$/;"	f
main	gnl_tc/static_param.c	/^int	main(void)$/;"	f
main	gnl_tc/test.c	/^int	main(void)$/;"	f
main	libft_tc/Libft.c	/^int	main()$/;"	f
main	libft_tc/calloc.c	/^int	main(void)$/;"	f
main	libft_tc/memcmp_null.c	/^int	main(void)$/;"	f
main	libft_tc/strlcat_null.c	/^int	main(void)$/;"	f
main	libft_tc/strlcpy_null.c	/^int	main(void)$/;"	f
main	libft_tc/strncmp_null.c	/^int	main(void)$/;"	f
main	libft_tc/strnstr_null.c	/^int	main(void)$/;"	f
main	libft_tc/test.c	/^int main()$/;"	f
main	printf_tc/attribute.c	/^int	main(void)$/;"	f
main	printf_tc/err_len.c	/^int	main(void)$/;"	f
main	printf_tc/error.c	/^int	main(void)$/;"	f
main	printf_tc/hex.c	/^int	main(void)$/;"	f
main	printf_tc/main.c	/^int	main(void)$/;"	f
malloc	get_next_line/gnlTester/utils/leaks.cpp	/^void * malloc(size_t size) throw()$/;"	f
malloc	get_next_line_upd/gnlTester/utils/leaks.cpp	/^void * malloc(size_t size) throw()$/;"	f
mallocList	get_next_line/gnlTester/utils/leaks.cpp	/^std::vector<ptr> mallocList;$/;"	v
mallocList	get_next_line_upd/gnlTester/utils/leaks.cpp	/^std::vector<ptr> mallocList;$/;"	v
mallocListAdd	get_next_line/gnlTester/utils/leaks.cpp	/^void mallocListAdd(void * p, size_t size)$/;"	f
mallocListAdd	get_next_line_upd/gnlTester/utils/leaks.cpp	/^void mallocListAdd(void * p, size_t size)$/;"	f
mallocListRemove	get_next_line/gnlTester/utils/leaks.cpp	/^void mallocListRemove(void * p)$/;"	f
mallocListRemove	get_next_line_upd/gnlTester/utils/leaks.cpp	/^void mallocListRemove(void * p)$/;"	f
mcheck	get_next_line/gnlTester/utils/check.cpp	/^void mcheck(void * p, size_t required_size)$/;"	f
mcheck	get_next_line_upd/gnlTester/utils/check.cpp	/^void mcheck(void * p, size_t required_size)$/;"	f
new	get_next_line/gnlTester/tests/bonus.cpp	/^#define new /;"	d	file:
new	get_next_line/gnlTester/tests/bonus.cpp	/^#undef new$/;"	d	file:
new	get_next_line/gnlTester/tests/mandatory.cpp	/^#define new /;"	d	file:
new	get_next_line/gnlTester/tests/mandatory.cpp	/^#undef new$/;"	d	file:
new	get_next_line/gnlTester/utils/gnl.cpp	/^#define new /;"	d	file:
new	get_next_line/gnlTester/utils/gnl.cpp	/^#undef new$/;"	d	file:
new	get_next_line_upd/gnlTester/tests/bonus.cpp	/^#define new /;"	d	file:
new	get_next_line_upd/gnlTester/tests/bonus.cpp	/^#undef new$/;"	d	file:
new	get_next_line_upd/gnlTester/tests/mandatory.cpp	/^#define new /;"	d	file:
new	get_next_line_upd/gnlTester/tests/mandatory.cpp	/^#undef new$/;"	d	file:
new	get_next_line_upd/gnlTester/utils/gnl.cpp	/^#define new /;"	d	file:
new	get_next_line_upd/gnlTester/utils/gnl.cpp	/^#undef new$/;"	d	file:
next	ft_printf/Libft/libft.h	/^	struct s_list	*next;$/;"	m	struct:s_list	typeref:struct:s_list::s_list
next	libft/libft.h	/^	struct s_list	*next;$/;"	m	struct:s_list	typeref:struct:s_list::s_list
nl_parse	get_next_line/bonus/get_next_line_bonus.c	/^static char	*nl_parse(t_line *line, char *buf, ssize_t buf_len)$/;"	f	file:
nl_parse	get_next_line_upd/bonus/get_next_line_bonus.c	/^static char	*nl_parse(t_line *line, char *buf, ssize_t buf_len)$/;"	f	file:
operator <<	get_next_line/gnlTester/utils/color.cpp	/^operator<<(std::ostream & os, Color c)$/;"	f
operator <<	get_next_line_upd/gnlTester/utils/color.cpp	/^operator<<(std::ostream & os, Color c)$/;"	f
operator ==	get_next_line/gnlTester/utils/leaks.cpp	/^bool operator==(ptr const & p1, ptr const & p2)$/;"	f
operator ==	get_next_line_upd/gnlTester/utils/leaks.cpp	/^bool operator==(ptr const & p1, ptr const & p2)$/;"	f
p	get_next_line/gnlTester/utils/leaks.hpp	/^	void * p;$/;"	m	struct:ptr
p	get_next_line_upd/gnlTester/utils/leaks.hpp	/^	void * p;$/;"	m	struct:ptr
pf_conversion	ft_printf/ft_printf.c	/^static int	pf_conversion(const char *format, va_list ap)$/;"	f	file:
pf_itoa	ft_printf/ft_printf_utils.c	/^void	pf_itoa(int n, char str[])$/;"	f
pf_itoa_hex	ft_printf/ft_printf_utils.c	/^void	pf_itoa_hex(unsigned long long n, char str[], char specifier)$/;"	f
pf_itoa_u	ft_printf/ft_printf_utils.c	/^void	pf_itoa_u(unsigned int n, char str[])$/;"	f
pf_len	ft_printf/ft_printf_utils.c	/^int	pf_len(int n)$/;"	f
print_addr	ft_printf/ft_printf.c	/^static int	print_addr(void *ptr)$/;"	f	file:
print_char	ft_printf/ft_printf_str.c	/^int	print_char(char ch)$/;"	f
print_decimal	ft_printf/ft_printf_numeric.c	/^int	print_decimal(int n)$/;"	f
print_hex	ft_printf/ft_printf_numeric.c	/^int	print_hex(unsigned int n, char button)$/;"	f
print_str	ft_printf/ft_printf_str.c	/^int	print_str(char *str)$/;"	f
print_udecimal	ft_printf/ft_printf_numeric.c	/^int	print_udecimal(unsigned int n)$/;"	f
ptr	get_next_line/gnlTester/utils/leaks.hpp	/^	ptr(void * _p = 0, size_t _size = 0) : p(_p), size(_size) {}$/;"	f	struct:ptr
ptr	get_next_line/gnlTester/utils/leaks.hpp	/^struct ptr$/;"	s
ptr	get_next_line_upd/gnlTester/utils/leaks.hpp	/^	ptr(void * _p = 0, size_t _size = 0) : p(_p), size(_size) {}$/;"	f	struct:ptr
ptr	get_next_line_upd/gnlTester/utils/leaks.hpp	/^struct ptr$/;"	s
rec	ft_printf/Libft/ft_putnbr_fd.c	/^static void	rec(int n, int fd)$/;"	f	file:
rec	libft/ft_putnbr_fd.c	/^static void	rec(int n, int fd)$/;"	f	file:
s	gnl_tc/static.c	/^char	*s = "hi";$/;"	v
s_line	get_next_line/bonus/get_next_line_bonus.h	/^typedef struct s_line$/;"	s
s_line	get_next_line/get_next_line.h	/^typedef struct s_line$/;"	s
s_line	get_next_line/get_next_line_bonus.h	/^typedef struct s_line$/;"	s
s_line	get_next_line_upd/bonus/get_next_line_bonus.h	/^typedef struct s_line$/;"	s
s_line	get_next_line_upd/get_next_line.h	/^typedef struct s_line$/;"	s
s_line	get_next_line_upd/get_next_line_bonus.h	/^typedef struct s_line$/;"	s
s_line	gnl_tc/static.c	/^typedef struct s_line	$/;"	s	file:
s_list	ft_printf/Libft/libft.h	/^typedef struct s_list$/;"	s
s_list	libft/libft.h	/^typedef struct s_list$/;"	s
s_str	gnl_tc/static.c	/^typedef struct s_str$/;"	s	file:
showLeaks	get_next_line/gnlTester/utils/leaks.cpp	/^void showLeaks(void)$/;"	f
showLeaks	get_next_line_upd/gnlTester/utils/leaks.cpp	/^void showLeaks(void)$/;"	f
sigsegv	get_next_line/gnlTester/utils/sigsegv.cpp	/^void sigsegv(int signal)$/;"	f
sigsegv	get_next_line_upd/gnlTester/utils/sigsegv.cpp	/^void sigsegv(int signal)$/;"	f
size	get_next_line/gnlTester/utils/leaks.hpp	/^	size_t size;$/;"	m	struct:ptr
size	get_next_line_upd/gnlTester/utils/leaks.hpp	/^	size_t size;$/;"	m	struct:ptr
str	get_next_line/bonus/get_next_line_bonus.h	/^	char	*str;$/;"	m	struct:s_line
str	get_next_line/get_next_line.h	/^	char	*str;$/;"	m	struct:s_line
str	get_next_line/get_next_line_bonus.h	/^	char	*str;$/;"	m	struct:s_line
str	get_next_line_upd/bonus/get_next_line_bonus.h	/^	char	*str;$/;"	m	struct:s_line
str	get_next_line_upd/get_next_line.h	/^	char	*str;$/;"	m	struct:s_line
str	get_next_line_upd/get_next_line_bonus.h	/^	char	*str;$/;"	m	struct:s_line
t_line	get_next_line/bonus/get_next_line_bonus.h	/^}	t_line;$/;"	t	typeref:struct:s_line
t_line	get_next_line/get_next_line.h	/^}	t_line;$/;"	t	typeref:struct:s_line
t_line	get_next_line/get_next_line_bonus.h	/^}	t_line;$/;"	t	typeref:struct:s_line
t_line	get_next_line_upd/bonus/get_next_line_bonus.h	/^}	t_line;$/;"	t	typeref:struct:s_line
t_line	get_next_line_upd/get_next_line.h	/^}	t_line;$/;"	t	typeref:struct:s_line
t_line	get_next_line_upd/get_next_line_bonus.h	/^}	t_line;$/;"	t	typeref:struct:s_line
t_line	gnl_tc/static.c	/^} t_line;$/;"	t	typeref:struct:s_line	file:
t_list	ft_printf/Libft/libft.h	/^}	t_list;$/;"	t	typeref:struct:s_list
t_list	libft/libft.h	/^}	t_list;$/;"	t	typeref:struct:s_list
t_str	gnl_tc/static.c	/^} t_str;$/;"	t	typeref:struct:s_str	file:
title	get_next_line/gnlTester/utils/check.hpp	/^# define title(/;"	d
title	get_next_line_upd/gnlTester/utils/check.hpp	/^# define title(/;"	d
